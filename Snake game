#include <iostream>
#include <cstdlib>
#include <ctime>
#include <conio.h>//Allows us to use keyboard inputs to control the snake;
#include <Windows.h>
using namespace std;
bool gameover;
int snakeX, snakeY, fruitX, fruitY, score;
int nTails;
int tailX[100], tailY[100];
const int width = 20;
const int height = 20;
enum direction{Stop = 0, Right, Left, up, down};
direction dir;

void setup(){
	srand(time(0));// use srand(time()) because my normal rand() function doesn't work very well;
	gameover = false;
	snakeX = width / 2;
	snakeY = height / 2;
	fruitX = rand() % width;
	fruitY = rand() % height;
	dir = Stop;
	score = 0;
}// How the game starts in when you start the application;

void draw(){
	system("cls");
	for (int x = 0; x < width + 2; x++) {
		cout << 'x';
	}
	cout << endl;


	for (int i = 0; i < height; i++) {//row;
		for (int j = 0; j < width; j++) {//column;
			if (j == 0)//left column;
				cout << 'x';
			if (i == snakeY && j == snakeX)
				cout << 'O';
			else if (i == fruitY && j == fruitX)
				cout << 'F';
			else {
				bool print = false;
				for (int k = 0; k < nTails; k++) {
					if (tailX[k] == j && tailY[k] == i) {
						cout << 'o';
						print = 'true';
					}
				}
				if (!print)
					cout << " ";
			}	
			
			if (j == width - 1)
				cout << 'x';
		}
		cout << endl;
	}
	for (int y = 0; y < width + 2; y++)
		cout << 'x';
	cout << endl;
	cout << "Score: " << score;
}// How you see the arena, snake, fruit and other stuff;

void controls(){
	if (_kbhit()) {
		switch (_getch())
		{
		case 'w':
			dir = up;
			break;
		case 's':
			dir = down;
			break;
		case 'a':
			dir = Left;
			break;
		case 'd':
			dir = Right;
			break;
		case 'x':
			gameover = true;
			break;
		}
	}
}// How user controls the game;

void logic(){
	srand(time(0));
	int prevX = tailX[0];
	int prevY = tailY[0];
	int prev2X, prev2Y;
	tailX[0] = snakeX;
	tailY[0] = snakeY;
	for (int i = 1; i < nTails; i++) {
		prev2X = tailX[i];
		prev2Y = tailY[i];
		tailX[i] = prevX;
		tailY[i] = prevY;
		prevX = prev2X;
		prevY = prev2Y;
	}
	switch (dir)
	{
	case Right:
		snakeX++;
		break;
	case Left:
		snakeX--;
		break;
	case up:
		snakeY--;
		break;
	case down:
		snakeY++;
		break;
	}
	if (snakeX < 0 || snakeX == width || snakeY < 0 || snakeY == height) {
		gameover = true;
	}
	for (int i = 0; i < nTails; i++) {
		if (tailX[i] == snakeX && tailY[i] == snakeY) {
			cout << "You touched the tail";
			gameover = true;
		}
	}
	if (snakeX == fruitX && snakeY == fruitY) {
		fruitX = rand() % width;
		fruitY = rand() % height;
		nTails++;
		score += 10;
	}
} // How game increases snakes size and what happens when the snake eats it

int main(){
	setup();
	while (!gameover) {
		draw();
		controls();
		logic();
		Sleep(20);
	}
	return 0;
}
